# coding: utf-8

"""
    Adobe Analytics APIs

    The endpoints described here are routed through Adobe.io.          In order to use these endpoints you must create an oAuth client that is          subscribed to access the Adobe Analytics Reporting API.  # noqa: E501

    OpenAPI spec version: v1 - Build: 2019-10-03_20:32:29.323
    
    Generated by: https://github.com/swagger-api/swagger-codegen.git
"""

import pprint
import re  # noqa: F401

import six

class AnalyticsVirtualReportSuite(object):
    """NOTE: This class is auto generated by the swagger code generator program.

    Do not edit the class manually.
    """
    """
    Attributes:
      swagger_types (dict): The key is attribute name
                            and the value is attribute type.
      attribute_map (dict): The key is attribute name
                            and the value is json key in definition.
    """
    swagger_types = {
        'id': 'str',
        'name': 'str',
        'description': 'str',
        'rsid': 'str',
        'report_suite_name': 'str',
        'owner': 'Owner',
        'parent_rsid': 'str',
        'parent_rsid_name': 'str',
        'timezone': 'int',
        'segment_list': 'list[str]',
        'currency': 'str',
        'calendar_type': 'CalendarType',
        'timezone_zone_info': 'str',
        'tags': 'list[Tag]',
        'site_title': 'str',
        'modified': 'datetime',
        'created': 'datetime'
    }

    attribute_map = {
        'id': 'id',
        'name': 'name',
        'description': 'description',
        'rsid': 'rsid',
        'report_suite_name': 'reportSuiteName',
        'owner': 'owner',
        'parent_rsid': 'parentRsid',
        'parent_rsid_name': 'parentRsidName',
        'timezone': 'timezone',
        'segment_list': 'segmentList',
        'currency': 'currency',
        'calendar_type': 'calendarType',
        'timezone_zone_info': 'timezoneZoneInfo',
        'tags': 'tags',
        'site_title': 'siteTitle',
        'modified': 'modified',
        'created': 'created'
    }

    def __init__(self, id=None, name=None, description=None, rsid=None, report_suite_name=None, owner=None, parent_rsid=None, parent_rsid_name=None, timezone=None, segment_list=None, currency=None, calendar_type=None, timezone_zone_info=None, tags=None, site_title=None, modified=None, created=None):  # noqa: E501
        """AnalyticsVirtualReportSuite - a model defined in Swagger"""  # noqa: E501
        self._id = None
        self._name = None
        self._description = None
        self._rsid = None
        self._report_suite_name = None
        self._owner = None
        self._parent_rsid = None
        self._parent_rsid_name = None
        self._timezone = None
        self._segment_list = None
        self._currency = None
        self._calendar_type = None
        self._timezone_zone_info = None
        self._tags = None
        self._site_title = None
        self._modified = None
        self._created = None
        self.discriminator = None
        if id is not None:
            self.id = id
        if name is not None:
            self.name = name
        if description is not None:
            self.description = description
        if rsid is not None:
            self.rsid = rsid
        if report_suite_name is not None:
            self.report_suite_name = report_suite_name
        if owner is not None:
            self.owner = owner
        if parent_rsid is not None:
            self.parent_rsid = parent_rsid
        if parent_rsid_name is not None:
            self.parent_rsid_name = parent_rsid_name
        if timezone is not None:
            self.timezone = timezone
        if segment_list is not None:
            self.segment_list = segment_list
        if currency is not None:
            self.currency = currency
        if calendar_type is not None:
            self.calendar_type = calendar_type
        if timezone_zone_info is not None:
            self.timezone_zone_info = timezone_zone_info
        if tags is not None:
            self.tags = tags
        if site_title is not None:
            self.site_title = site_title
        if modified is not None:
            self.modified = modified
        if created is not None:
            self.created = created

    @property
    def id(self):
        """Gets the id of this AnalyticsVirtualReportSuite.  # noqa: E501

        System generated virtual report suite id  # noqa: E501

        :return: The id of this AnalyticsVirtualReportSuite.  # noqa: E501
        :rtype: str
        """
        return self._id

    @id.setter
    def id(self, id):
        """Sets the id of this AnalyticsVirtualReportSuite.

        System generated virtual report suite id  # noqa: E501

        :param id: The id of this AnalyticsVirtualReportSuite.  # noqa: E501
        :type: str
        """

        self._id = id

    @property
    def name(self):
        """Gets the name of this AnalyticsVirtualReportSuite.  # noqa: E501


        :return: The name of this AnalyticsVirtualReportSuite.  # noqa: E501
        :rtype: str
        """
        return self._name

    @name.setter
    def name(self, name):
        """Sets the name of this AnalyticsVirtualReportSuite.


        :param name: The name of this AnalyticsVirtualReportSuite.  # noqa: E501
        :type: str
        """

        self._name = name

    @property
    def description(self):
        """Gets the description of this AnalyticsVirtualReportSuite.  # noqa: E501


        :return: The description of this AnalyticsVirtualReportSuite.  # noqa: E501
        :rtype: str
        """
        return self._description

    @description.setter
    def description(self, description):
        """Sets the description of this AnalyticsVirtualReportSuite.


        :param description: The description of this AnalyticsVirtualReportSuite.  # noqa: E501
        :type: str
        """

        self._description = description

    @property
    def rsid(self):
        """Gets the rsid of this AnalyticsVirtualReportSuite.  # noqa: E501

        The report suite id for which the component was created/updated  # noqa: E501

        :return: The rsid of this AnalyticsVirtualReportSuite.  # noqa: E501
        :rtype: str
        """
        return self._rsid

    @rsid.setter
    def rsid(self, rsid):
        """Sets the rsid of this AnalyticsVirtualReportSuite.

        The report suite id for which the component was created/updated  # noqa: E501

        :param rsid: The rsid of this AnalyticsVirtualReportSuite.  # noqa: E501
        :type: str
        """

        self._rsid = rsid

    @property
    def report_suite_name(self):
        """Gets the report_suite_name of this AnalyticsVirtualReportSuite.  # noqa: E501

        The report suite name for which the component was created/updated  # noqa: E501

        :return: The report_suite_name of this AnalyticsVirtualReportSuite.  # noqa: E501
        :rtype: str
        """
        return self._report_suite_name

    @report_suite_name.setter
    def report_suite_name(self, report_suite_name):
        """Sets the report_suite_name of this AnalyticsVirtualReportSuite.

        The report suite name for which the component was created/updated  # noqa: E501

        :param report_suite_name: The report_suite_name of this AnalyticsVirtualReportSuite.  # noqa: E501
        :type: str
        """

        self._report_suite_name = report_suite_name

    @property
    def owner(self):
        """Gets the owner of this AnalyticsVirtualReportSuite.  # noqa: E501


        :return: The owner of this AnalyticsVirtualReportSuite.  # noqa: E501
        :rtype: Owner
        """
        return self._owner

    @owner.setter
    def owner(self, owner):
        """Sets the owner of this AnalyticsVirtualReportSuite.


        :param owner: The owner of this AnalyticsVirtualReportSuite.  # noqa: E501
        :type: Owner
        """

        self._owner = owner

    @property
    def parent_rsid(self):
        """Gets the parent_rsid of this AnalyticsVirtualReportSuite.  # noqa: E501

        Parent report suite id for virtual report suite  # noqa: E501

        :return: The parent_rsid of this AnalyticsVirtualReportSuite.  # noqa: E501
        :rtype: str
        """
        return self._parent_rsid

    @parent_rsid.setter
    def parent_rsid(self, parent_rsid):
        """Sets the parent_rsid of this AnalyticsVirtualReportSuite.

        Parent report suite id for virtual report suite  # noqa: E501

        :param parent_rsid: The parent_rsid of this AnalyticsVirtualReportSuite.  # noqa: E501
        :type: str
        """

        self._parent_rsid = parent_rsid

    @property
    def parent_rsid_name(self):
        """Gets the parent_rsid_name of this AnalyticsVirtualReportSuite.  # noqa: E501

        Parent report suite name  # noqa: E501

        :return: The parent_rsid_name of this AnalyticsVirtualReportSuite.  # noqa: E501
        :rtype: str
        """
        return self._parent_rsid_name

    @parent_rsid_name.setter
    def parent_rsid_name(self, parent_rsid_name):
        """Sets the parent_rsid_name of this AnalyticsVirtualReportSuite.

        Parent report suite name  # noqa: E501

        :param parent_rsid_name: The parent_rsid_name of this AnalyticsVirtualReportSuite.  # noqa: E501
        :type: str
        """

        self._parent_rsid_name = parent_rsid_name

    @property
    def timezone(self):
        """Gets the timezone of this AnalyticsVirtualReportSuite.  # noqa: E501


        :return: The timezone of this AnalyticsVirtualReportSuite.  # noqa: E501
        :rtype: int
        """
        return self._timezone

    @timezone.setter
    def timezone(self, timezone):
        """Sets the timezone of this AnalyticsVirtualReportSuite.


        :param timezone: The timezone of this AnalyticsVirtualReportSuite.  # noqa: E501
        :type: int
        """

        self._timezone = timezone

    @property
    def segment_list(self):
        """Gets the segment_list of this AnalyticsVirtualReportSuite.  # noqa: E501

        List of segments applied to this virtual report suite  # noqa: E501

        :return: The segment_list of this AnalyticsVirtualReportSuite.  # noqa: E501
        :rtype: list[str]
        """
        return self._segment_list

    @segment_list.setter
    def segment_list(self, segment_list):
        """Sets the segment_list of this AnalyticsVirtualReportSuite.

        List of segments applied to this virtual report suite  # noqa: E501

        :param segment_list: The segment_list of this AnalyticsVirtualReportSuite.  # noqa: E501
        :type: list[str]
        """

        self._segment_list = segment_list

    @property
    def currency(self):
        """Gets the currency of this AnalyticsVirtualReportSuite.  # noqa: E501


        :return: The currency of this AnalyticsVirtualReportSuite.  # noqa: E501
        :rtype: str
        """
        return self._currency

    @currency.setter
    def currency(self, currency):
        """Sets the currency of this AnalyticsVirtualReportSuite.


        :param currency: The currency of this AnalyticsVirtualReportSuite.  # noqa: E501
        :type: str
        """

        self._currency = currency

    @property
    def calendar_type(self):
        """Gets the calendar_type of this AnalyticsVirtualReportSuite.  # noqa: E501


        :return: The calendar_type of this AnalyticsVirtualReportSuite.  # noqa: E501
        :rtype: CalendarType
        """
        return self._calendar_type

    @calendar_type.setter
    def calendar_type(self, calendar_type):
        """Sets the calendar_type of this AnalyticsVirtualReportSuite.


        :param calendar_type: The calendar_type of this AnalyticsVirtualReportSuite.  # noqa: E501
        :type: CalendarType
        """

        self._calendar_type = calendar_type

    @property
    def timezone_zone_info(self):
        """Gets the timezone_zone_info of this AnalyticsVirtualReportSuite.  # noqa: E501

        Suite friendly timezone name  # noqa: E501

        :return: The timezone_zone_info of this AnalyticsVirtualReportSuite.  # noqa: E501
        :rtype: str
        """
        return self._timezone_zone_info

    @timezone_zone_info.setter
    def timezone_zone_info(self, timezone_zone_info):
        """Sets the timezone_zone_info of this AnalyticsVirtualReportSuite.

        Suite friendly timezone name  # noqa: E501

        :param timezone_zone_info: The timezone_zone_info of this AnalyticsVirtualReportSuite.  # noqa: E501
        :type: str
        """

        self._timezone_zone_info = timezone_zone_info

    @property
    def tags(self):
        """Gets the tags of this AnalyticsVirtualReportSuite.  # noqa: E501


        :return: The tags of this AnalyticsVirtualReportSuite.  # noqa: E501
        :rtype: list[Tag]
        """
        return self._tags

    @tags.setter
    def tags(self, tags):
        """Sets the tags of this AnalyticsVirtualReportSuite.


        :param tags: The tags of this AnalyticsVirtualReportSuite.  # noqa: E501
        :type: list[Tag]
        """

        self._tags = tags

    @property
    def site_title(self):
        """Gets the site_title of this AnalyticsVirtualReportSuite.  # noqa: E501


        :return: The site_title of this AnalyticsVirtualReportSuite.  # noqa: E501
        :rtype: str
        """
        return self._site_title

    @site_title.setter
    def site_title(self, site_title):
        """Sets the site_title of this AnalyticsVirtualReportSuite.


        :param site_title: The site_title of this AnalyticsVirtualReportSuite.  # noqa: E501
        :type: str
        """

        self._site_title = site_title

    @property
    def modified(self):
        """Gets the modified of this AnalyticsVirtualReportSuite.  # noqa: E501


        :return: The modified of this AnalyticsVirtualReportSuite.  # noqa: E501
        :rtype: datetime
        """
        return self._modified

    @modified.setter
    def modified(self, modified):
        """Sets the modified of this AnalyticsVirtualReportSuite.


        :param modified: The modified of this AnalyticsVirtualReportSuite.  # noqa: E501
        :type: datetime
        """

        self._modified = modified

    @property
    def created(self):
        """Gets the created of this AnalyticsVirtualReportSuite.  # noqa: E501


        :return: The created of this AnalyticsVirtualReportSuite.  # noqa: E501
        :rtype: datetime
        """
        return self._created

    @created.setter
    def created(self, created):
        """Sets the created of this AnalyticsVirtualReportSuite.


        :param created: The created of this AnalyticsVirtualReportSuite.  # noqa: E501
        :type: datetime
        """

        self._created = created

    def to_dict(self):
        """Returns the model properties as a dict"""
        result = {}

        for attr, _ in six.iteritems(self.swagger_types):
            value = getattr(self, attr)
            if isinstance(value, list):
                result[attr] = list(map(
                    lambda x: x.to_dict() if hasattr(x, "to_dict") else x,
                    value
                ))
            elif hasattr(value, "to_dict"):
                result[attr] = value.to_dict()
            elif isinstance(value, dict):
                result[attr] = dict(map(
                    lambda item: (item[0], item[1].to_dict())
                    if hasattr(item[1], "to_dict") else item,
                    value.items()
                ))
            else:
                result[attr] = value
        if issubclass(AnalyticsVirtualReportSuite, dict):
            for key, value in self.items():
                result[key] = value

        return result

    def to_str(self):
        """Returns the string representation of the model"""
        return pprint.pformat(self.to_dict())

    def __repr__(self):
        """For `print` and `pprint`"""
        return self.to_str()

    def __eq__(self, other):
        """Returns true if both objects are equal"""
        if not isinstance(other, AnalyticsVirtualReportSuite):
            return False

        return self.__dict__ == other.__dict__

    def __ne__(self, other):
        """Returns true if both objects are not equal"""
        return not self == other
